services:
  app:
    image: ghcr.io/ahmedinsaudi/hrdoneallyback:latest
    restart: unless-stopped
    working_dir: /app
    env_file: .env
    expose:
      - "3000"
    environment:
      - VIRTUAL_HOST=dev.doneally.com
      - VIRTUAL_PORT=3030
      - VIRTUAL_PROTO=http
    depends_on:
      pgbouncer:
        condition: service_healthy
    networks:
      - backend
      - frontend
    volumes:
      - gofiber-hr-migrations:/migrations
      - gofiber-hr-logs:/app/application_logs
      - gofiber-hr-public:/app/public/images

  db:
    image: postgres:15.5-alpine
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_INITDB_ARGS: "--auth-host=md5 --encoding=UTF8 --locale=en_US.UTF-8"
    volumes:
      - ./migrations:/migrations
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d $${POSTGRES_DB} || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s
    networks:
      - backend

  pgbouncer:
    image: edoburu/pgbouncer:latest
    restart: always
    environment:
      AUTH_TYPE: md5
      DB_HOST: db 
      DB_NAME: ${POSTGRES_DB} 
      DB_USER: postgres
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      
      PGBOUNCER_MAX_CLIENT_CONN: 1000
      PGBOUNCER_DEFAULT_POOL_SIZE: 20
    depends_on:
      db:
          condition: service_healthy
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -h 127.0.0.1 -p 5432"] 
      interval: 10s
      timeout: 5s
      retries: 5


volumes:
  pgdata:
  gofiber-hr-migrations:
  gofiber-hr-logs:
  gofiber-hr-public:

networks:
  frontend:
    external: true
  backend:
